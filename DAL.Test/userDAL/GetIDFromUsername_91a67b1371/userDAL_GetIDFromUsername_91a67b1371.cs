// Test generated by RoostGPT for test CSharp-Blood-Bank-Management-System using AI Type Open AI and AI Model gpt-4

using NUnit.Framework;
using System.Data;
using Moq;
using System.Data.SqlClient;
using System;

// Make sure to import the correct namespace for UserDAL
using BloodBankManagementSystem.DAL;

namespace BloodBankManagementSystem.DAL.Test
{
    [TestFixture]
    public class userDAL_GetIDFromUsername_91a67b1371
    {
        private Mock<IDbConnection> _mockConnection;
        private Mock<IDbCommand> _mockCommand;
        private Mock<IDataReader> _mockReader;
        private string _username;

        [SetUp]
        public void Setup()
        {
            _mockConnection = new Mock<IDbConnection>();
            _mockCommand = new Mock<IDbCommand>();
            _mockReader = new Mock<IDataReader>();
            _username = "testUser";
            _mockConnection.Setup(m => m.CreateCommand()).Returns(_mockCommand.Object);
            _mockCommand.Setup(m => m.ExecuteReader()).Returns(_mockReader.Object);
        }

        [Test]
        public void GetIDFromUsername_ValidUsername_ReturnsUserID()
        {
            _mockReader.SetupSequence(m => m.Read())
                .Returns(true)
                .Returns(false);
            _mockReader.Setup(m => m["user_id"]).Returns(1);

            var userDAL = new UserDAL(_mockConnection.Object);
            var result = userDAL.GetIDFromUsername(_username);

            Assert.AreEqual(1, result);
        }

        [Test]
        public void GetIDFromUsername_InvalidUsername_ReturnsZero()
        {
            _mockReader.Setup(m => m.Read()).Returns(false);

            var userDAL = new UserDAL(_mockConnection.Object);
            var result = userDAL.GetIDFromUsername(_username);

            Assert.AreEqual(0, result);
        }

        [Test]
        public void GetIDFromUsername_NullUsername_ThrowsArgumentNullException()
        {
            var userDAL = new UserDAL(_mockConnection.Object);

            Assert.Throws<ArgumentNullException>(() => userDAL.GetIDFromUsername(null));
        }
    }
}
