// Test generated by RoostGPT for test CSharp-Blood-Bank-Management-System using AI Type Open AI and AI Model gpt-4

using NUnit.Framework;
using BloodBankManagementSystem.UI;
using System;
using Moq;

namespace BloodBankManagementSystem.UI.Test
{
    [TestFixture]
    public class frmDonors_btnAdd_Click_538d36321e
    {
        private Mock<IDonorDal> _mockDonorDal;
        private Mock<IUserDal> _mockUserDal;
        private Donor d;
        private UserBLL usr;
        private frmDonors _frmDonors;
        private string loggedInUser = "testUser";

        [SetUp]
        public void Setup()
        {
            // TODO: Replace these values with actual test data
            d = new Donor 
            {
                first_name = "John",
                last_name = "Doe",
                email = "john.doe@example.com",
                gender = "Male",
                blood_group = "A+",
                contact = "1234567890",
                address = "123 Street, City, Country",
                added_date = DateTime.Now,
                image_name = "no-image.jpg"
            };

            usr = new UserBLL 
            {
                user_id = 1,
                username = loggedInUser
            };

            _mockDonorDal = new Mock<IDonorDal>();
            _mockUserDal = new Mock<IUserDal>();
            _mockUserDal.Setup(x => x.GetIDFromUsername(loggedInUser)).Returns(usr);

            _frmDonors = new frmDonors(_mockDonorDal.Object, _mockUserDal.Object);
        }

        [Test]
        public void btnAdd_Click_InsertsDonor_Successfully()
        {
            _mockDonorDal.Setup(x => x.Insert(d)).Returns(true);
            _frmDonors.btnAdd_Click(null, null);
            _mockDonorDal.Verify(x => x.Insert(d), Times.Once);
            Assert.AreEqual("New Donor Added Successfully", _frmDonors.MessageBoxText);
        }

        [Test]
        public void btnAdd_Click_FailsToInsertDonor()
        {
            _mockDonorDal.Setup(x => x.Insert(d)).Returns(false);
            _frmDonors.btnAdd_Click(null, null);
            _mockDonorDal.Verify(x => x.Insert(d), Times.Once);
            Assert.AreEqual("Failed to Add new Donor.", _frmDonors.MessageBoxText);
        }
    }
}
